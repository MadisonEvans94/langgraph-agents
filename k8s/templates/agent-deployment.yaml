apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent-stack.agentFullname" . }}
  labels:
    app: {{ include "agent-stack.agentName" . }}
spec:
  replicas: {{ .Values.agent.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "agent-stack.agentName" . }}
  template:
    metadata:
      labels:
        app: {{ include "agent-stack.agentName" . }}
    spec:
      containers:
        - name: agent-server
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag }}"
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          command: [ "bash", "-c" ]
          args: [ "./agent_service/start_service.sh" ]
          ports:
            - containerPort: {{ .Values.agent.containerPort }}
          env:
            - name: LOCAL_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LOCAL_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: LOCAL_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOCAL_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
{{- range $key, $value := .Values.agent.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
{{- end }}
{{- if .Values.agent.hfSecret.enabled }}
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.hfSecret.secretName }}
                  key: {{ .Values.agent.hfSecret.secretKey }}
{{- end }}
          resources:
            requests:
              cpu: {{ .Values.agent.resources.requests.cpu }}
              memory: {{ .Values.agent.resources.requests.memory }}
            limits:
              cpu: {{ .Values.agent.resources.limits.cpu }}
              memory: {{ .Values.agent.resources.limits.memory }}
      imagePullSecrets:
        - name: dockerhub
      nodeSelector:
{{- range $key, $value := .Values.agent.nodeSelector }}
        {{ $key }}: "{{ $value }}"
{{- end }}
      terminationGracePeriodSeconds: 5
